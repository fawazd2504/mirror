name: chocolatine

env:
  MIRROR_URL: git@github.com:EpitechPromo2026/B-DOP-200-COT-2-1-chocolatine-fawaz.gomina.git
  EXECUTABLES: "binaries"
on:
    push:
      branches-ignore:
        - 'ga-ignore-*'
    pull_request:
      branches-ignore:
         - 'ga-ignore-*'

jobs:
  check_repository_cleanliness:
    name: files cleaner
    runs-on: ubuntu-latest
    steps:
      - uses: action/checkout@v3
        with:
          repository: 'git@github.com:EpitechPromo2026/B-DOP-200-COT-2-1-chocolatine-fawaz.gomina.git'
          fetch-depth: 0
      - run: |
          declare -a Useless
          Useless=($(find . -type f , -type d \( -name "*.o" -o -name "*~" -o -name "\#*\#" -o -iname "*pain_au_chocolat*" -o -name "*.a" -o -name "*.so" -o -name "*.gcno" -o -name "*.gcda" -o -name "*.gcov" -o -name "tmp" \) ) )
          for a in "$Useless[*]"
          do
          echo "::error file=${FILE#./}, title=Unwanted file detected::${FILE#./}"
          done
          if [[ -n $Useless ]]
          then 
              exit 1
          else 
          echo "No forbidden files detcted"
          fi
  
  check_program_compilation:
    name: verify that files compile
    needs: check_repository_cleanliness
    runs-on: ubuntu-latest
    container:
        image: epitechcontent/epitest-docker
    steps:
      - uses: action/checkout@v3
        with:
           repository: 'git@github.com:EpitechPromo2026/B-DOP-200-COT-2-1-chocolatine-fawaz.gomina.git'
      - run: make ./
      - timeout-minutes: 2
        run: make fclean

  run_tests:
      name: 
      needs: check_program_compilation
      runs-on: ubuntu-latest
      container:
          image: epitechcontent/epitest-docker
      steps:
        - uses: action/checkout@v3
        - run: make tests_run ./
        - timeout-minutes: 2



  push_to_mirror:
      name: push to mirror
      runs-on: ubuntu-latest
      if: ${{ github.event_name == 'push' }}
      needs: run_tests
      steps:
        - uses: action/checkout@v2
          with:
            fetch-depth: 0
        - uses: pixta-dev/repository-mirroring-action@v1
          with:
            target_repo_url:
                MIRROR_URL
            ssh_private_key:
                ${{ secrets.THE_SECRET }}
